rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      match /{collection}/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /cards/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      match /userCards/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /priceHistory/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /customCollections/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Add specific rule for removing cards from collections
      match /customCollections/{collectionId} {
        allow update: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['cardIds']);
      }
    }

    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }
  }
}