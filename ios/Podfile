platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  
  # Create Flutter directory if it doesn't exist
  flutter_dir = File.dirname(generated_xcode_build_settings_path)
  Dir.mkdir(flutter_dir) unless File.exist?(flutter_dir)
  
  unless File.exist?(generated_xcode_build_settings_path)
    # Try to regenerate the file
    system('flutter pub get')
    
    # If still doesn't exist, raise error
    unless File.exist?(generated_xcode_build_settings_path)
      raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
    end
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Remove duplicate and conflicting versions
  # pod 'GoogleSignIn', '~> 7.0'  # Remove this line
  # pod 'GTMAppAuth', '~> 2.0'    # Remove this line
  # pod 'AppAuth', '~> 1.6'       # Remove this line
  
  # Firebase dependencies with specific versions
  pod 'Firebase/Analytics'
  pod 'Firebase/Auth'
  pod 'Firebase/Core'
  pod 'Firebase/Firestore', '10.25.0'  # Add specific version
  
  # Core dependencies
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseAuth', :modular_headers => true
  
  # Let flutter_install_all_ios_pods handle the plugin dependencies
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      
      # Common build settings
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['ARCHS'] = 'arm64'
      
      # Allow non-modular includes in framework modules
      config.build_settings['ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      
      # Enhanced Firebase module handling
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['DEFINES_MODULE'] = 'YES'
      config.build_settings['SWIFT_INSTALL_OBJC_HEADER'] = 'NO'
      
      # Force modular headers for all Firebase-related pods
      if target.name.include?('Firebase') || target.name.include?('Google')
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      end
      
      # For Firebase-specific targets
      if target.name.start_with?('Firebase') || target.name.include?('Firebase')
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        config.build_settings['SWIFT_INCLUDE_PATHS'] = ['$(inherited)', '${PODS_ROOT}/Firebase']
      end
      
      # Add GTMAppAuth specific settings
      if target.name.include?('GTMAppAuth')
        config.build_settings['SWIFT_EMIT_MODULE_INTERFACE'] = 'NO'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['SWIFT_VERSION'] = '5.0'
      end

      # Add GoogleSignIn specific settings
      if target.name.include?('GoogleSignIn')
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['HEADER_SEARCH_PATHS'] = '$(inherited) ${PODS_ROOT}/GoogleSignIn/GoogleSignIn'
      end

      if target.name == 'BoringSSL-GRPC'
        # Set C11 standard explicitly
        config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'c11'
        config.build_settings['CLANG_C_LANGUAGE_STANDARD'] = 'c11'
        
        # Other BoringSSL settings
        config.build_settings['OTHER_CFLAGS'] = ''
        config.build_settings['OTHER_LDFLAGS'] = ''
        config.build_settings['COMPILER_INDEX_STORE_ENABLE'] = 'NO'
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
        
        # Assembly-related settings
        config.build_settings['ENABLE_ARM64'] = 'YES'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = ['$(inherited)', 'OPENSSL_NO_ASM=1']
      end
    end
    flutter_additional_ios_build_settings(target)
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
  end
end
